// 概念 node是什么 不是一门语言 核心就是一个让js可以运行服务端的一个运行时

// js 有几部分组成（DOM BOM） ECMASCRIPT

// node中只能使用ECMASCRIPT 语法本身 (node提供了内置模块可以帮我们做系统级得操作 fs http) +npm包

// 中间层 后端没有跨域问题 跨域浏览器的限制

// ssr服务端渲染 react vue = node 可以解析react vue 语法渲染后返回给浏览器  nuxt next

// 打包工具 webpack rollup 前端可以通过node 来实现各种各样的工具


// node 其实做服务端没有优势 刚开始是为了和web密切集合的

// 主线程是单线程的

// java多线程每次请求都开一个线程 （线程池） 请求过多的话 浪费内存 锁的问题 通过时间片切换感觉是并发做事 切换时间片也是有性能消耗 java可以利用多线程来实现加密 压缩（cpu密集型）


// node中没有锁 就一个主线程 （内存消耗少） 如果主线程工作量大会有堵塞问题 不适合cpu密集型 i/o密集   可以开子进程  读个进程可以充分利用cpu内核

// 异步 非堵塞 、java 同步堵塞（同步、非堵塞）

// 堵塞和非堵塞针对的是调用方  异步同步指的是被调用方